:javascript
  var device_areas_to_select_tree_setting = {
    async: {
      enable: true,
      url: get_url_for_device_areas_to_select_tree,
      type: "get",
      autoParam: [ "id", "name=n", "level=lv" ],
      otherParam:{ "otherParam" : "device_areas_to_select_tree" }
    },
    edit: {
      enable: true,
      showRemoveBtn: false,
      showRenameBtn: false
    },
    view: {
      selectedMulti: true,
      expandSpeed: ""
    },

    callback: {
      beforeExpand: beforeExpand,
      onAsyncSuccess: onAsyncSuccess,
      onAsyncError: onAsyncError,
      beforeDrag: beforeDrag,
      beforeDrop: before_drop_to_device_areas_to_select_tree,
      onDrop: on_device_areas_to_select_drop
    }
  };

  // 此函数不能返回"", 否则会令到页面重新去请求"/shoot_sequences/define_dashboard"
  function get_url_for_device_areas_to_select_tree( treeId, treeNode ) {
    var level = treeNode ? treeNode.level : -1;
    //只显示一层，显示待选择的设备区
    return "/task/shoot_sequences/" + get_cur_shoot_sequence_id() + "/get_device_areas_to_select.json?level=" + level;
  }

  function before_drop_to_device_areas_to_select_tree(treeId, treeNodes, targetNode, moveType) {
    if( treeId == "device_areas_to_select_tree" ) {
      if( moveType == "inner" ) { return false; }
    }
    return targetNode ? targetNode.drop != false : true;
  }

  //从当前树拖到另一棵树时，也会调用这个函数
  function on_device_areas_to_select_drop( event, treeId, treeNodes, targetNode, moveType ) {
    //alert( "onDrop treeId " + treeId );
    //alert(treeNodes.length + "," + (targetNode ? (targetNode.tId + ", " + targetNode.name) : "isRoot" ));
    $( "#btn_save_shoot_sequence" ).attr( "disabled", false );
  }

